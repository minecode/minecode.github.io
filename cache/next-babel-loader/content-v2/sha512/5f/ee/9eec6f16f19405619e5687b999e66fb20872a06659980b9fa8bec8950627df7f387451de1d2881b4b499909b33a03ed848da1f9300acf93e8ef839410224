{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { faStar, faCertificate } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Link from 'next/link';\nexport function getHeader() {\n  return {\n    'Authorization': 'Basic ' + process.env.REACT_APP_APIKEY\n  };\n}\nexport function getDiffDates(date1, date2) {\n  const diffTime = Math.abs(date2 - date1);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n}\nexport function addPost(issue) {\n  var card = document.createElement('div');\n  card.setAttribute('class', 'col-12');\n  var header = document.createElement('div');\n  var title = document.createElement('h3');\n  var link = document.createElement('Link');\n  title.setAttribute('class', 'my-0 font-weight-normal');\n  link.setAttribute('href', './post/[id]');\n  link.setAttribute('as', './post/' + issue.number + '');\n  var text = document.createTextNode(issue.title.split(/\\[\\w*\\] /)[1]);\n  link.append(text);\n  title.append(link);\n  header.append(title);\n  var body = document.createElement('div');\n  body.setAttribute('class', 'd-flex align-middle justify-content-center align-items-center');\n  var userLogoDiv = document.createElement('div');\n  userLogoDiv.setAttribute('class', 'align-self-center p-2');\n  var infoPostDiv = document.createElement('div');\n  infoPostDiv.setAttribute('class', 'align-self-center p-2');\n  var date = new Date(issue.created_at);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  date = monthNames[date.getMonth()] + ', ' + date.getFullYear();\n  var info = document.createElement('p');\n  info.append('Posted on ' + date);\n  info.append(' by ' + issue.user.login);\n  var githubLink = document.createElement('a');\n  githubLink.setAttribute('class', 'mt-3 mb-4 btn btn-sm');\n  githubLink.setAttribute('href', 'https://github.com/' + issue.user.login);\n  githubLink.setAttribute('target', '_blank');\n  githubLink.setAttribute('style', 'color: #000\"');\n  var githubLogo = document.createElement('img');\n  githubLogo.setAttribute('src', '/images/github.svg');\n  githubLogo.setAttribute('alt', 'Github');\n  githubLogo.setAttribute('width', '14');\n  githubLogo.setAttribute('height', '14');\n  githubLink.append(githubLogo);\n  info.append(githubLink);\n  infoPostDiv.append(info);\n  body.append(infoPostDiv);\n  card.append(header);\n  card.append(body);\n  return card;\n}\nexport function addIssue(issue) {\n  var card = document.createElement('div');\n  card.setAttribute('class', 'card mb-4 box-shadow');\n  var header = document.createElement('div');\n  header.setAttribute('class', 'card-header');\n  var title = document.createElement('h5');\n  title.setAttribute('class', 'my-0 font-weight-normal');\n  var text = document.createTextNode(issue.title.split(/\\[\\w*\\] /)[1]);\n  title.append(text);\n  header.append(title);\n  var body = document.createElement('div');\n  body.setAttribute('class', 'card-body');\n  var date = document.createElement('p');\n  date.setAttribute('style', 'opacity:0.5; font-size:12px');\n  text = document.createTextNode(issue.created_at.substring(0, 10));\n  date.append(text);\n  body.append(date);\n  var description = document.createElement('div');\n  description.setAttribute('class', 'mt-3 mb-3');\n  text = document.createTextNode(issue.body);\n  description.append(text);\n  body.append(description);\n  var status = document.createElement('div');\n  text = document.createTextNode(issue.state.charAt(0).toUpperCase() + issue.state.slice(1));\n  if (issue.state === 'open') status.setAttribute('class', 'mt-3 mb-4 btn btn-sm btn-success');else status.setAttribute('class', 'mt-3 mb-4 btn btn-sm btn-danger');\n  status.append(text);\n  body.append(status);\n  var labels = document.createElement('div');\n  labels.setAttribute('class', 'text-center');\n  issue.labels.forEach(label => {\n    var lab = document.createElement('div');\n    lab.setAttribute('class', 'm-1 btn btn-sm btn-outline-primary');\n    text = document.createTextNode(label.name);\n    lab.append(text);\n    labels.append(lab);\n  });\n  body.append(labels);\n  card.append(header);\n  card.append(body);\n  return card;\n}\nexport function titleCase(str) {\n  str = str.split('_').join(' ');\n  var splitStr = str.toLowerCase().split(' ');\n\n  for (var i = 0; i < splitStr.length; i++) {\n    // You do not need to check if i is larger than splitStr length, as your for does that for you\n    // Assign it back to the array\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  } // Directly return the joined string\n\n\n  return splitStr.join(' ');\n}\nexport function getDate(date) {\n  var dateFinal = new Date(date);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return monthNames[dateFinal.getMonth()] + ', ' + dateFinal.getFullYear();\n}\nexport function getCard(i, element, hoverElement, setHoverElement) {\n  const background = element[3];\n  const title = element[2];\n  const href = element[0];\n  const as = element[1];\n  const footer = element[4];\n  return /*#__PURE__*/_jsx(Link, {\n    href: href,\n    as: as,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: 'col-sm-12 col-md-3 btn mx-2 my-2 p-2 justify-content-center',\n      onMouseEnter: () => setHoverElement(i),\n      onMouseLeave: () => setHoverElement(null),\n      style: {\n        backgroundImage: background,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundColor: '#21212180',\n        borderRadius: 20,\n        border: 0,\n        height: 300,\n        MsTransform: hoverElement === i ? 'scale(1.1)' : 'scale(1.0)',\n        MozTransform: hoverElement === i ? 'scale(1.1)' : 'scale(1.0)',\n        transform: hoverElement === i ? 'scale(1.1)' : 'scale(1.0)',\n        WebkitTransform: hoverElement === i ? 'scale(1.1)' : 'scale(1.0)',\n        OTransform: hoverElement === i ? 'scale(1.1)' : 'scale(1.0)',\n        display: 'block',\n        transition: 'all .5s ease',\n        WebkitTransition: 'all .5s ease',\n        MozTransition: 'all .5s ease'\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12\",\n        style: {\n          position: 'relative',\n          top: '10px',\n          color: '#f1f1f1',\n          fontSize: 16,\n          fontWeight: 100\n        },\n        children: title\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"p\", {\n        className: \"col-12\",\n        style: {\n          color: '#f1f1f1',\n          position: 'absolute',\n          bottom: 10,\n          left: 0,\n          right: 0,\n          fontSize: 12,\n          opacity: 0.8\n        },\n        children: footer\n      })]\n    }, i)\n  });\n}\nexport function getElement(type, element) {\n  if (type === 'post') {\n    const href = '/post/[id]';\n    const as = '/post/' + element.number;\n    var title = element.title.split(/\\[\\w*\\] /)[1];\n    element.labels.filter(e => e.name === 'highlight').length > 0 & getDiffDates(new Date(element.closed_at), new Date()) <= 2 ? title = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [element.title.split(/\\[\\w*\\] /)[1], \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"m-1 btn btn-sm btn-outline-light btn-sm bordered\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faStar\n        }), ' ', \"Destaque\"]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"m-1 btn btn-sm btn-outline-light btn-sm bordered\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faCertificate\n        }), ' ', \"Novo\"]\n      })]\n    }) : element.labels.filter(e => e.name === 'highlight').length > 0 ? title = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [element.title.split(/\\[\\w*\\] /)[1], \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"m-1 btn btn-sm btn-outline-light btn-sm bordered\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faStar\n        }), ' ', \"Destaque\"]\n      })]\n    }) : getDiffDates(new Date(element.closed_at), new Date()) <= 2 ? title = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [element.title.split(/\\[\\w*\\] /)[1], \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"m-1 btn btn-sm btn-outline-light btn-sm bordered\",\n        children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n          icon: faCertificate\n        }), ' ', \"Novo\"]\n      })]\n    }) : title = /*#__PURE__*/_jsx(_Fragment, {\n      children: element.title.split(/\\[\\w*\\] /)[1]\n    });\n    const background = element.body.match(/(?:!\\[(.*?)\\]\\((.*?)\\))/g) ? `linear-gradient(#21212190, #21212190), url(${element.body.match(/(?:!\\[(.*?)\\]\\((.*?)\\))/g)[0].split('(')[1].split(')')[0]})` : null;\n\n    const footer = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [\"Posted on \", getDate(element.created_at), \" by \", element.user.login, ' ', /*#__PURE__*/_jsx(\"a\", {\n        href: 'https://github.com/' + element.user.login,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        style: {\n          color: '#fff'\n        },\n        children: /*#__PURE__*/_jsx(\"img\", {\n          className: \"rounded-circle\",\n          src: element.user.avatar_url,\n          alt: \"Github\",\n          width: \"16\",\n          height: \"16\"\n        })\n      })]\n    });\n\n    return [href, as, title, background, footer];\n  } else if (type === 'app') {\n    const href = '/app/[id]';\n    const as = '/app/' + element.name;\n    const title = titleCase(element.name);\n    const background = `linear-gradient(#21212190, #21212190), url(${'https://raw.githubusercontent.com/minecode/' + element.name + '/master/' + element.minecode_settings.image})`;\n    const date = new Date(element.updated_at);\n\n    const footer = /*#__PURE__*/_jsxs(_Fragment, {\n      children: [\"Last update at\", ' ', date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear()]\n    });\n\n    return [href, as, title, background, footer];\n  } else if (type === 'release') {\n    const href = '/release/[repository]/[id]';\n    const as = element.repository ? '/release/' + element.repository + '/' + element.number : '/release/website/' + element.number;\n\n    const title = /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        color: '#fff'\n      },\n      children: [/*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Release \", element.title, ' ', element.state === 'closed' ? 'at ' + getDate(element.closed_at) : 'due on ' + getDate(element.due_on)]\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Open issues \", element.open_issues]\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        children: [\"Closed issues \", element.closed_issues]\n      })]\n    });\n\n    var background = 'linear-gradient(#ff000090, #00000090), url(https://image.freepik.com/free-vector/flat-design-concept-rocket-launch_16734-61.jpg)';\n\n    if (element.state === 'closed') {\n      background = 'linear-gradient(#00ff0090, #00000090), url(https://image.freepik.com/free-vector/flat-design-concept-rocket-launch_16734-61.jpg)';\n    }\n\n    const footer = /*#__PURE__*/_jsx(_Fragment, {});\n\n    return [href, as, title, background, footer];\n  }\n}\nexport function getListCards(post, hoverElement, setHoverElement) {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\",\n      id: \"posts\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: \"display-4\",\n        children: \"Blog\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: \"lead\",\n        children: \"Minecode Posts\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      id: \"posts_list\",\n      className: \"row justify-content-center\",\n      children: post && post.map((element, i) => {\n        var isPost = false;\n        element.labels.forEach(element => {\n          if (element.name === 'post') {\n            isPost = true;\n            return;\n          }\n        });\n\n        if (isPost) {\n          const postElement = getElement('post', element);\n          return getCard(i, postElement, hoverElement, setHoverElement);\n        } else {\n          return /*#__PURE__*/_jsx(_Fragment, {});\n        }\n      })\n    })]\n  });\n}\nexport function getTitle(title) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"p-5 row text-center\",\n    children: /*#__PURE__*/_jsx(\"h1\", {\n      className: \"col-12\",\n      children: title\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}