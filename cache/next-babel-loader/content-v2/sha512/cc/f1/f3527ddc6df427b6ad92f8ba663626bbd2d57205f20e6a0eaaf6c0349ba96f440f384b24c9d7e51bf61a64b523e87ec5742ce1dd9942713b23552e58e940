{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { getHeader, getDate, getTitle } from '../../../../components/Utils';\nimport { useRouter } from 'next/router';\n\nconst release = () => {\n  const {\n    0: milestone,\n    1: setMilestones\n  } = useState(null);\n  const {\n    0: issuesMilestones,\n    1: setIssuesMilestones\n  } = useState(null);\n  const {\n    0: issuesNonClosedMilestones,\n    1: setIssuesNonClosedMilestones\n  } = useState(null);\n  const router = useRouter();\n  const {\n    id,\n    repository\n  } = router.query;\n  useEffect(() => {\n    if (id !== undefined && repository !== undefined) {\n      var header = getHeader();\n      fetch('https://minecode.herokuapp.com/github/repos/minecode/' + repository + '/milestones/' + id, {\n        method: 'GET',\n        headers: header\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setMilestones(data);\n      });\n      fetch('https://minecode.herokuapp.com/github/repos/minecode/' + repository + '/milestones/' + id + '/issues/closed', {\n        method: 'GET',\n        headers: header\n      }).then(res1 => res1.json()).then(data1 => {\n        console.log(data1);\n        setIssuesMilestones(data1);\n      });\n      fetch('https://minecode.herokuapp.com/github/repos/minecode/' + repository + '/milestones/' + id, {\n        method: 'GET',\n        headers: header\n      }).then(res1 => res1.json()).then(data1 => {\n        console.log(data1);\n        setIssuesNonClosedMilestones(data1);\n      });\n    }\n  }, [repository, id]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"container\",\n    children: [getTitle('Release Notes'), milestone && [milestone].map(element => {\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"row text-center\",\n          children: [/*#__PURE__*/_jsxs(\"h2\", {\n            className: \"col-12\",\n            children: [\"Version \", element.title, ' ', element.state === 'closed' ? ' released at ' + getDate(element.closed_at) : ' due on ' + getDate(element.due_on)]\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"col-12\",\n            style: {\n              opacity: 0.5\n            },\n            children: element.description\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: \"col-12\",\n            children: [\"Open issues \", element.open_issues, /*#__PURE__*/_jsx(\"br\", {}), \"Closed issues \", element.closed_issues]\n          })]\n        }), /*#__PURE__*/_jsx(\"ul\", {\n          className: \"row\",\n          children: issuesMilestones && issuesNonClosedMilestones && issuesMilestones.concat(issuesNonClosedMilestones).map((element2, i) => {\n            console.log(element2);\n            return /*#__PURE__*/_jsxs(\"li\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxs(\"p\", {\n                children: [/*#__PURE__*/_jsx(\"span\", {\n                  style: {\n                    opacity: element2.state === 'closed' ? 1 : 0.5\n                  },\n                  children: element2.title\n                }), element2.labels && element2.labels.map((element3, i) => {\n                  return /*#__PURE__*/_jsx(\"div\", {\n                    className: \"m-1 btn btn-sm btn-primary\",\n                    style: {\n                      backgroundColor: '#' + element3.color,\n                      border: 'none'\n                    },\n                    children: element3.name\n                  }, i);\n                })]\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  opacity: 0.5\n                },\n                children: element2.body\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"p\", {\n                style: {\n                  opacity: 0.5\n                },\n                children: element2.state === 'closed' ? getDate(element2.closed_at) : getDate(element.due_on)\n              })]\n            }, i);\n          })\n        })]\n      });\n    })]\n  });\n};\n\nexport default release;","map":null,"metadata":{},"sourceType":"module"}